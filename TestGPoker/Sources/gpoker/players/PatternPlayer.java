package gpoker.players;

import gpoker.*;
import org.jdom2.Element;

/**
 * The PatternPlayer is a player who analyzes his hole cards and evaluates what kind of hand he has (including community cards)
 * and acts upon this knowledge.
 * 
 * @author Edgar Ebensperger
 */
public class PatternPlayer extends Player {


	/** The value is a combination of what hand the PatternPlayer has and what kind of cards he has on his hand. */
	private double value;


	/**
	 * Creates the player via XML.
	 *
	 * @param element an XML player element
	 */
	public PatternPlayer(Element element) {

		super(element);
	}


	/**
	 * Constructs the player.
	 *
	 * @param name  the player's name
	 * @param chips the amount of chips the player has.
	 */
	public PatternPlayer(String name, int chips) {

		super(name, chips);
	}


	/**
	 * The pattern player's moves can not be trusted.
	 * 
	 * @return false.
	 */
	public boolean isTrusted() {
		return false;
	}
	

	/**
	 * Returns the move generated by the PatternPlayer. This is done by evaluating the players hole cards
	 * and what kind of hand he has (including community cards).
	 * 
	 * @return The move generated by the PatternPlayer.
	 */
	@SuppressWarnings("StatementWithEmptyBody")
	public Move act() {

		double cardValue = 0.0;

		for (Card card : getCards())
			cardValue += ((double)card.getRank()) / ((double)Card.ACE);

		double handValue = Director.getInstance().getDealer().evaluate(getHand());

		if (handValue == Hand.HIGH_CARD)
			handValue = 0.5;
		else if (handValue == Hand.ONE_PAIR)
			handValue = 0.7;
		else if (handValue >= Hand.TWO_PAIR)
			handValue = 1.0;
		
		cardValue *= 0.8;
		handValue *= 0.2;
		
		value = cardValue + handValue;
		Move move = new Move(Move.FOLD);

		if (value < 0.2)
			;                            	// on purpose
		else if (value < 0.4)
			move.setType(Move.CHECK);
		else if (value < 0.6)
			move.setType(Move.CALL);
		else {
			move.setType(Move.RAISE);
			move.setBet(getBet());
		}
		return move;
	}

	
	/**
	 * Returns the amount of chips the PatternPlayer bets when raising. The amount the PatternPlayer raises is determined by the value which is calculated from the
	 * players hole cards and what kind of hand he has.
	 * 
	 * @return The amount of chips when raising.
	 */
	private int getBet() {
		
		int raise = getChips();

		if (value < 0.7)
			raise = (int)(raise * 0.7);
		else if (value < 0.8)
			raise = (int)(raise * 0.8);
		else if (value < 0.9)
			raise = (int)(raise * 0.9);

		return raise;
	}

}
